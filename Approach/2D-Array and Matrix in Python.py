#### Elementary Matrix

import numpy as np

A = np.array([[0.0, 0.1, 0.2, 0.3, 0.4],
              [1.8, 1.6, 1.4, 1.2, 1.0],
              [2.1, 2.3, 2.5, 2.7, 2.9]])

print(A.dtype)      # float64
print(A.size)       # 15
print(A.ndim)       # 2
print(A.shape)      # (3, 5)

A = np.array([[1.1, 1.2, 2.3],
              [3.4, 5.5, 8.6]])
B = np.array([[3.1, 4.1, 5.9],
              [2.6, 5.3, 5.8]])

# re = A + B
# print(re)
#     # [[ 4.2  5.3  8.2]
#     #  [ 6.  10.8 14.4]]
# re = A - B
# print(re)
#     # [[-2.  -2.9 -3.6]
#     #  [ 0.8  0.2  2.8]]
# re = A * B
# print(re)
#     # [[ 3.41  4.92 13.57]
#     #  [ 8.84 29.15 49.88]]

# ## Special Matrices
# n = 4
# A = np.identity(n)
# print(A)
#     # [[1. 0. 0. 0.]
#     #  [0. 1. 0. 0.]
#     #  [0. 0. 1. 0.]
#     #  [0. 0. 0. 1.]]

# A = np.eye(n, k = -1)
# print(A)
#     # [[0. 0. 0. 0.]
#     #  [1. 0. 0. 0.]
#     #  [0. 1. 0. 0.]
#     #  [0. 0. 1. 0.]]

# A = np.eye(n, k = 0)
# print(A)
#     # [[1. 0. 0. 0.]
#     #  [0. 1. 0. 0.]
#     #  [0. 0. 1. 0.]
#     #  [0. 0. 0. 1.]]

# A = np.eye(n, k = 1)
# print(A)
#     # [[0. 1. 0. 0.]
#     #  [0. 0. 1. 0.]
#     #  [0. 0. 0. 1.]
#     #  [0. 0. 0. 0.]]

# A = np.eye(n, k = 2)
# print(A)
#     # [[0. 0. 1. 0.]
#     #  [0. 0. 0. 1.]
#     #  [0. 0. 0. 0.]
#     #  [0. 0. 0. 0.]]

# A = np.diag(np.arange(0,12,2))
# print(A)
#     # [[ 0  0  0  0  0  0]
#     #  [ 0  2  0  0  0  0]
#     #  [ 0  0  4  0  0  0]
#     #  [ 0  0  0  6  0  0]
#     #  [ 0  0  0  0  8  0]
#     #  [ 0  0  0  0  0 10]]

# A = np.diag(np.linspace(0,10,6))
# print(A)
#     # [[ 0.  0.  0.  0.  0.  0.]
#     #  [ 0.  2.  0.  0.  0.  0.]
#     #  [ 0.  0.  4.  0.  0.  0.]
#     #  [ 0.  0.  0.  6.  0.  0.]
#     #  [ 0.  0.  0.  0.  8.  0.]
#     #  [ 0.  0.  0.  0.  0. 10.]]

